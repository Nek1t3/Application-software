import streamlit as st
import graphviz

st.set_page_config(page_title="–ú–µ—Ç–æ–¥ –°–∞–∞—Ç—ñ", layout="wide")
st.title("–ú–µ—Ç–æ–¥ –°–∞–∞—Ç—ñ ‚Äî –Ü—î—Ä–∞—Ä—Ö—ñ—è –∑–∞–¥–∞—á—ñ")

# --- –í–∏–±—ñ—Ä –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫—Ä–∏—Ç–µ—Ä—ñ—ó–≤ —Ç–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤ ---
if "num_criteria" not in st.session_state:
    st.session_state.num_criteria = 3
if "num_alternatives" not in st.session_state:
    st.session_state.num_alternatives = 3

num_criteria = st.number_input("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫—Ä–∏—Ç–µ—Ä—ñ—ó–≤:", min_value=1, max_value=9, value=st.session_state.num_criteria)
num_alternatives = st.number_input("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤:", min_value=1, max_value=9, value=st.session_state.num_alternatives)

# –û–Ω–æ–≤–ª—é—î–º–æ session_state, —è–∫—â–æ –∑–º—ñ–Ω–∏–ª–∏—Å—å –∑–Ω–∞—á–µ–Ω–Ω—è
st.session_state.num_criteria = num_criteria
st.session_state.num_alternatives = num_alternatives

# --- –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–∑–≤–∏ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ ---
criteria_names = st.session_state.get("criteria_names", [f"–ö—Ä–∏—Ç–µ—Ä—ñ–π {i+1}" for i in range(num_criteria)])
alternative_names = st.session_state.get("alternative_names", [f"–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ {j+1}" for j in range(num_alternatives)])
goal_name = st.session_state.get("goal_name", "–ì–û–õ–û–í–ù–ê –ú–ï–¢–ê")

# --- üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –¥–æ–≤–∂–∏–Ω–∏ —Å–ø–∏—Å–∫—ñ–≤ –Ω–∞–∑–≤ ---
# –Ø–∫—â–æ –∫—Ä–∏—Ç–µ—Ä—ñ—ó–≤ —Å—Ç–∞–ª–æ –±—ñ–ª—å—à–µ ‚Äî –¥–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ –Ω–∞–∑–≤–∏
if len(criteria_names) < num_criteria:
    for i in range(len(criteria_names), num_criteria):
        criteria_names.append(f"–ö—Ä–∏—Ç–µ—Ä—ñ–π {i+1}")
# –Ø–∫—â–æ —Å—Ç–∞–ª–æ –º–µ–Ω—à–µ ‚Äî –æ–±—Ä—ñ–∑–∞—î–º–æ —Å–ø–∏—Å–æ–∫
elif len(criteria_names) > num_criteria:
    criteria_names = criteria_names[:num_criteria]

# –¢–µ —Å–∞–º–µ –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤
if len(alternative_names) < num_alternatives:
    for j in range(len(alternative_names), num_alternatives):
        alternative_names.append(f"–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ {j+1}")
elif len(alternative_names) > num_alternatives:
    alternative_names = alternative_names[:num_alternatives]

# –û–Ω–æ–≤–ª—é—î–º–æ —É session_state
st.session_state.criteria_names = criteria_names
st.session_state.alternative_names = alternative_names

# --- –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—É ---
dot = graphviz.Digraph()
dot.attr(size="15,8", ratio="fill", rankdir="TB")

# –†—ñ–≤–µ–Ω—å 1 ‚Äî –ú–µ—Ç–∞
dot.node("Goal", goal_name, shape="box", style="filled", color="lightblue")

# –†—ñ–≤–µ–Ω—å 2 ‚Äî –ö—Ä–∏—Ç–µ—Ä—ñ—ó
criteria_nodes = []
for i, crit_name in enumerate(criteria_names):
    node_id = f"C{i+1}"
    dot.node(node_id, crit_name, shape="box", style="filled", color="lightgreen")
    dot.edge("Goal", node_id)
    criteria_nodes.append(node_id)

# –†—ñ–≤–µ–Ω—å 3 ‚Äî –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏
alt_nodes = []
for j, alt_name in enumerate(alternative_names):
    node_id = f"A{j+1}"
    dot.node(node_id, alt_name, shape="box", style="filled", color="lightyellow")
    alt_nodes.append(node_id)

# –ó–≤‚Äô—è–∑–∫–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—ó–≤ –∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞–º–∏
for c in criteria_nodes:
    for a in alt_nodes:
        dot.edge(c, a)

# –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
st.graphviz_chart(dot, width=1500, height=800)

st.info("üí° –©–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞–∑–≤–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—ó–≤, –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤ –∞–±–æ –≥–æ–ª–æ–≤–Ω–æ—ó –º–µ—Ç–∏ ‚Äî –≤—ñ–¥–∫—Ä–∏–π —Å—Ç–æ—Ä—ñ–Ω–∫—É **¬´–ù–∞–∑–≤–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—ó–≤¬ª** —É –º–µ–Ω—é –ª—ñ–≤–æ—Ä—É—á.")
